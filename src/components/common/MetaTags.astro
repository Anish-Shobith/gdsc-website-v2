---
import { AstroSeo } from '@astrolib/seo';
import { getImage } from '@astrojs/image';

import { SITE } from '~/config';
import { MetaSEO } from '~/types';
import { getCanonical, getAsset } from '~/utils/permalinks';
import { getRelativeUrlByFilePath } from '~/utils/directories';

import CustomStyles from '~/components/CustomStyles.astro';

export interface Props extends MetaSEO {
  dontUseTitleTemplate?: boolean;
}

const defaultImage = SITE.defaultImage
  ? (
      await getImage({
        src: SITE.defaultImage,
        alt: 'Default image',
        width: 1200,
        height: 628,
      })
    ).src
  : '';

const {
  title = SITE.name,
  description = '',
  image: _image = defaultImage,
  canonical = getCanonical(String(Astro.url.pathname)),
  noindex = false,
  nofollow = false,

  ogTitle = title,
  ogType = 'website',

  dontUseTitleTemplate = false,
} = Astro.props;

const image =
  typeof _image === 'string'
    ? new URL(_image, Astro.site)
    : _image && typeof _image['src'] !== 'undefined'
    ? // @ts-ignore
      new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
    : null;
---

<meta charset='UTF-8' />
<meta name='viewport' content='width=device-width, initial-scale=1.0' />
<meta http-equiv='Content-Type' content='text/html; charset=UTF-8' />
<meta http-equiv='Content-Language' content='en' />
<meta name='mobile-web-app-capable' content='yes' />
<meta name='apple-mobile-web-app-capable' content='yes' />
<meta name="msapplication-config" content="/browserconfig.xml" />
<meta name='msapplication-TileColor' content='#0f172a' />
<meta name='theme-color' content='#0f172a' />

<AstroSeo
  title={title}
  titleTemplate={dontUseTitleTemplate ? '%s' : `%s â€” ${SITE.name}`}
  description={description}
  canonical={String(canonical)}
  noindex={noindex}
  nofollow={nofollow}
  openGraph={{
    url: String(canonical),
    title: ogTitle,
    description: description,
    type: ogType,
    images: image
      ? [
          {
            url: image.toString(),
            alt: ogTitle,
          },
        ]
      : undefined,
  }}
  twitter={{
    cardType: image ? 'summary_large_image' : undefined,
  }}
/>

<CustomStyles />
<link rel='shortcut icon' href={getAsset('/favicon.ico')} />
<link rel='icon' type='image/svg+xml' href={getAsset('/favicon.svg')} />
<link rel='mask-icon' href={getAsset('/favicon.svg')} color='#8D46E7' />
<link rel='apple-touch-icon' sizes='180x180' href={getAsset('/icons/apple-touch-icon.png')} />
<link rel='icon' type='image/png' sizes='32x32' href={getAsset('/icons/favicon-32x32.png')} />
<link rel='icon' type='image/png' sizes='16x16' href={getAsset('/icons/favicon-16x16.png')} />
